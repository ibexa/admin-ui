{% trans_default_domain 'ibexa_locationview' %}

{% import _self as macros %}

{% set body_rows = [] %}
{% if relations is not empty %}
    {% for relation in relations %}
        {% set body_row_cols = [] %}
        {% if relation.isAccessible %}
            {% set destination = relation.destinationContentInfo %}
            {% set col_raw %}
                {% if destination.mainLocationId is not null %}
                    <a href="{{ path('ibexa.content.view', { 'contentId': destination.id, 'locationId': relation.resolvedDestinationLocation.id }) }}">
                        {{ ibexa_content_name(destination) }}
                    </a>
                {% else %}
                    {{ ibexa_content_name(destination) }}
                {% endif %}
            {% endset %}
            {% set body_row_cols = body_row_cols|merge([{
                content: col_raw,
                raw: true,
            }]) %}
    
            {% set body_row_cols = body_row_cols|merge([
                { content: content_types[destination.contentTypeId].name },
            ]) %}
    
            {% set col_raw %}
                {{ macros.relation_type(relation) }}
                {% if (relation.relationFieldDefinitionName) %}
                    ({{ relation.relationFieldDefinitionName }})
                {% endif %}
            {% endset %}
            {% set body_row_cols = body_row_cols|merge([{
                content: col_raw,
                raw: true,
            }]) %}
        {% else %}
            {% set body_row_cols = body_row_cols|merge([{
                attr: { colspan: 8 },
                content: 'dashboard.table.relation.unauthorized'|trans({
                    '%module%': relation.unauthorizedRelation.module,
                    '%function%': relation.unauthorizedRelation.function,
                    '%contentId%': relation.unauthorizedRelation.payload.contentId,
                })|desc('You do not have the \'%function%\' \'%module%\' permission for content ID: %contentId%'),
            }]) %}
        {% endif %}

        {% set body_rows = body_rows|merge([{ cols: body_row_cols }]) %}
    {% endfor %}
{% endif %}

{% include '@ibexadesign/ui/component/table/table.html.twig' with {
    headline: 'tab.relations.related_content'|trans({
            '%contentName%' : ibexa_content_name(content)
        })|desc('Related content (Content items used by %contentName%)'),
    head_cols: [
        { content: 'tab.relations.table.name'|trans()|desc('Name') },
        { content: 'tab.relations.table.content_type'|trans()|desc('Content type') },
        { content: 'tab.relations.table.relation_type'|trans()|desc('Relation type') },
    ],
    body_rows,
    empty_table_info_text: 'tab.relations.no_relations'|trans()|desc('This Content item has no related content.'),
} %}

{% macro relation_type(relation) %}
    {% if relation.type == constant('Ibexa\\Contracts\\Core\\Repository\\Values\\Content\\Relation::COMMON') %}
        {{ 'tab.relations.table.relation_type.content_level_relation'|trans()|desc('Content level relation') }}
    {% elseif relation.type == constant('Ibexa\\Contracts\\Core\\Repository\\Values\\Content\\Relation::EMBED') %}
        {{ 'tab.relations.table.relation_type.embed'|trans()|desc('Embed') }}
    {% elseif relation.type == constant('Ibexa\\Contracts\\Core\\Repository\\Values\\Content\\Relation::LINK') %}
        {{ 'tab.relations.table.relation_type.link'|trans()|desc('Link') }}
    {% else %}
        {{ 'tab.relations.table.relation_type.field'|trans()|desc('Field') }}
    {% endif %}
{% endmacro %}
