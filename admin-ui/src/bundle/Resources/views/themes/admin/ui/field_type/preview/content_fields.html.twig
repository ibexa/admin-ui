{% extends '@IbexaCore/content_fields.html.twig' %}

{% trans_default_domain 'ibexa_fieldtypes_preview' %}

{% block ibexa_author_field %}
    {% if field.value.authors|length() > 0 %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_author')|trim}) %}
        <ul {{ block( 'field_attributes' ) }}>
            {% for author in field.value.authors %}
                <li>
                    {{ author.name }}
                    {% if author.email is not empty %}
                        &lt;<a href="mailto:{{ author.email|escape( 'url' ) }}">{{ author.email }}</a>&gt;
                    {% endif %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endblock %}

{% block ibexa_string_field %}
    {% set field_value = field.value.text %}
    {{ block( 'simple_inline_field' ) }}
{% endblock %}

{% block ibexa_text_field %}
    {% set field_value = field.value|nl2br %}
    {{ block( 'simple_block_field' ) }}
{% endblock %}

{% block ibexa_richtext_field %}
    {%- set field_value = field.value.xml|ibexa_richtext_to_html5 -%}
    {{ block( 'simple_block_field' ) }}
{% endblock %}

{% block ibexa_country_field %}
    {% if fieldSettings.isMultiple and field.value.countries|length > 0 %}
        <ul {{ block( 'field_attributes' ) }}>
            {% for country in field.value.countries %}
                <li>{{ country['Name'] }}</li>
            {% endfor %}
        </ul>
    {% elseif field.value.countries|length() == 1 %}
        <p {{ block( 'field_attributes' ) }}>
        {% for country in field.value.countries %}
            {{ country['Name'] }}
        {% endfor %}
        </p>
    {% endif %}
{% endblock %}

{% block ibexa_boolean_field %}
    {% set field_value = field.value.bool ? 'ibexa_boolean.yes'|trans|desc('Yes') : 'ibexa_boolean.no'|trans|desc('No') %}
    {{ block( 'simple_inline_field' ) }}
{% endblock %}

{% block ibexa_datetime_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.value|ibexa_full_datetime %}
        {{ block( 'simple_block_field' ) }}
        {% if fieldSettings.useSeconds %}
            {% include '@ibexadesign/ui/component/alert/alert.html.twig' with {
                type: 'info',
                title: 'ibexa_datetime.useseconds.enabled'|trans()|desc('`The date format is based on your user preferences and does not include seconds even if the Field allows it`'),
                class: 'mt-2',
            } only %}
        {% endif %}
    {% endif %}
{% endblock %}

{% block ibexa_date_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.date|ibexa_full_date('UTC') %}
        {{ block( 'simple_block_field' ) }}
    {% endif %}
{% endblock %}

{% block ibexa_time_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.time|ibexa_full_time('UTC') %}
        {{ block( 'simple_block_field' ) }}
        {% if fieldSettings.useSeconds %}
            {% include '@ibexadesign/ui/component/alert/alert.html.twig' with {
                type: 'info',
                title: 'ibexa_datetime.useseconds.enabled'|trans()|desc('`The date format is based on your user preferences and does not include seconds even if the Field allows it`'),
                class: 'mt-2',
            } only %}
        {% endif %}
    {% endif %}
{% endblock %}

{% block ibexa_email_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.email %}
        <a href="mailto:{{ field.value.email|escape( 'url' ) }}" {{ block( 'field_attributes' ) }}>{{ field.value.email }}</a>
    {% endif %}
{% endblock %}

{% block ibexa_integer_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.value %}
        {{ block( 'simple_inline_field' ) }}
    {% endif %}
{% endblock %}

{% block ibexa_float_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set field_value = field.value.value|format_number %}
        {{ block( 'simple_inline_field' ) }}
    {% endif %}
{% endblock %}

{% block ibexa_url_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        <a href="{{ field.value.link }}"
            {{ block( 'field_attributes' ) }}>{{ field.value.text ? field.value.text : field.value.link }}</a>
    {% endif %}
{% endblock %}

{% block ibexa_isbn_field %}
    {% set field_value = field.value.isbn %}
    {{ block( 'simple_inline_field' ) }}
{% endblock %}

{% block ibexa_keyword_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_keyword')|trim}) %}
        <ul {{ block( 'field_attributes' ) }}>
        {% for keyword in field.value.values %}
            <li class="ibexa-keyword__item">
                <span class="ibexa-keyword__item-content">
                    {{ keyword }}
                </span>
            </li>
        {% endfor %}
        </ul>
    {% endif %}
{% endblock %}

{% block ibexa_selection_field %}
    {% set options = fieldSettings.options %}

    {% if fieldSettings.multilingualOptions[field.languageCode] is defined %}
        {% set options = fieldSettings.multilingualOptions[field.languageCode] %}
    {% elseif fieldSettings.multilingualOptions[contentInfo.mainLanguageCode] is defined %}
        {% set options = fieldSettings.multilingualOptions[contentInfo.mainLanguageCode] %}
    {% endif %}

    {% if fieldSettings.isMultiple and field.value.selection|length() > 0  %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_selection-multiple')|trim}) %}
        <ul {{ block( 'field_attributes' ) }}>
        {% for selectedIndex in field.value.selection %}
            <li class="ibexa-selection__item ibexa-tag">
                <div class="ibexa-tag__content">
                    {{ options[selectedIndex] }}
                </div>
            </li>
        {% endfor %}
        </ul>
    {% elseif not fieldSettings.isMultiple %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_selection-single ibexa-tag')|trim}) %}

        {% set field_value = options[field.value.selection|first]|escape %}

        <div class="ibexa-tag__content">
            {{ block( 'simple_block_field' ) }}
        </div>
    {% endif %}
{% endblock %}

{# @todo:
 # - add translate filter
 # - legacy used to dump is_locked attribute
 #}
{% block ibexa_user_field %}
{% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_user')|trim}) %}
<div class="ibexa-scrollable-table-wrapper mb-0">
    <table {{ block( 'field_attributes' ) }}>
        <tbody>
            <tr>
                <td class="ibexa-user__type">{{ 'ibexa_user.username'|trans|desc('Username') }}:</td>
                <td>{{ field.value.login }}</td>
            </tr>
            <tr>
                <td class="ibexa-user__type">{{ 'ibexa_user.email'|trans|desc('Email') }}:</td>
                <td><a href="mailto:{{ field.value.email|escape( 'url' ) }}">{{ field.value.email }}</a></td>
            </tr>
            <tr>
                <td class="ibexa-user__type">{{ 'ibexa_user.enabled'|trans|desc('Enabled') }}:</td>
                <td>{{ field.value.enabled ? 'ibexa_user.yes'|trans|desc('Yes') : 'ibexa_user.no'|trans|desc('No') }}</td>
            </tr>
        </tbody>
    </table>

    {% if parameters['password_expires_at'] %}
        <p class="mt-2 mb-0">
            {% if parameters['is_password_expired'] %}
                {{ 'ibexa_user.password_already_expired'|trans|desc('Password has expired') }}
            {% else %}
                {% set password_expire_in = parameters['password_expires_in'] %}

                {% if password_expire_in.format('%a') > 0 %}
                    {{ 'ibexa_user.password_expires_in'|trans({
                        '%count%': password_expire_in.format('%a') + (password_expire_in.h >= 12 ? 1 : 0)
                    })|desc('Current password <b>expires in %count% days</b>')|raw }}
                {% else %}
                    {{ 'ibexa_user.password_expires_today'|trans({
                    })|desc('Current password <b>expires today</b>')|raw }}
                {% endif %}
            {% endif %}
        </p>
    {% endif %}
</div>
{% endblock %}

{% block ibexa_binaryfile_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
        {% set route_reference = ibexa_route( 'ibexa.content.download', {
            'content': content,
            'fieldIdentifier': field.fieldDefIdentifier,
            'inLanguage': content.prioritizedFieldLanguageCode,
            'version': versionInfo.versionNo
        } ) %}
        {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_binaryfile')|trim}) %}
        <div {{ block( 'field_attributes' ) }}>
            <svg class="ibexa-icon ibexa-icon--file">
                <use xlink:href="{{ ibexa_icon_path('file') }}"></use>
            </svg>
            {{ field.value.fileName }}
            {{ field.value.fileSize|ibexa_file_size( 1 ) }}
            <a class="btn ibexa-btn ibexa-btn--ghost ibexa-btn--no-text ml-4" download href="{{ path( route_reference.getRoute(), route_reference.getParams() ) }}">
                <svg class="ibexa-icon ibexa-icon--small ibexa-icon--download">
                    <use xlink:href="{{ ibexa_icon_path('download') }}"></use>
                </svg>
            </a>
        </div>
    {% endif %}
{% endblock %}

{% block ibexa_media_field %}
{% if not ibexa_field_is_empty( content, field ) %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_media')|trim}) %}
    {% set type = fieldSettings.mediaType %}
    {% set value = field.value %}
    {% set route_reference = ibexa_route( 'ibexa.content.download', {
        'content': content,
        'fieldIdentifier': field.fieldDefIdentifier,
        'version': versionInfo.versionNo
    } ) %}
    {% set download = path( route_reference.getRoute(), route_reference.getParams() ) %}
    {% set hasController = value.hasController ? 'ibexa_media.yes'|trans|desc('Yes') : 'ibexa_media.no'|trans|desc('No') %}
    {% set autoplay = value.autoplay ? 'ibexa_media.yes'|trans|desc('Yes') : 'ibexa_media.no'|trans|desc('No') %}
    {% set loop = value.loop ? 'ibexa_media.yes'|trans|desc('Yes') : 'ibexa_media.no'|trans|desc('No') %}
    <div {{ block( 'field_attributes' ) }}>
    {% autoescape false %}
    {% if type == "html5_video"
        or type == "quick_time"
        or type == "windows_media_player"
        or type == "real_player" %}
        <div class="ibexa-field-preview__media">
            <div class="ibexa-field-preview__video-wrapper">
                <video src="{{ download }}" width="100%" controls>
                    {{ 'ibexa_media.browser_does_not_support_html5_video'|trans|desc('Your browser does not support HTML5 video') }}
                </video>
            </div>
        </div>
        <div class="ibexa-field-preview__media-meta">
            <table>
                <thead>
                    <tr>
                        <th>{{ 'ibexa_media.video_file_properties'|trans|desc('Video file properties') }}:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>{{ 'ibexa_media.file_name'|trans|desc('File name') }}:</td>
                        <td>{{ value.fileName }}</td>
                    </tr>
                    <tr>
                        <td>{{ 'ibexa_media.type'|trans|desc('Type') }}:</td>
                        <td>{{ value.mimeType }}</td>
                    </tr>
                    <tr>
                        <td>{{ 'ibexa_media.size'|trans|desc('Size') }}:</td>
                        <td>{{ value.fileSize|ibexa_file_size( 1 ) }}</td>
                    </tr>
                    <tr>
                        <td>{{ 'ibexa_media.display_controls'|trans|desc('Display controls') }}:</td>
                        <td>{{hasController}}</td>
                    </tr>
                    <tr>
                        <td>{{ 'ibexa_media.auto_play'|trans|desc('Autoplay') }}:</td>
                        <td>{{autoplay}}</td>
                    </tr>
                    <tr>
                        <td>{{ 'ibexa_media.loop'|trans|desc('Loop') }}:</td>
                        <td>{{loop}}</td>
                    </tr>
                </tbody>
            </table>
        </div>
    {% endif %}
    {% endautoescape %}
    </div>
{% endif %}
{% endblock %}

{% block ibexa_object_relation_list_field %}
    {% if not ibexa_field_is_empty( content, field ) %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_object_relation_list')|trim}) %}
    <div {{ block( 'field_attributes' ) }}>
        {% embed '@ibexadesign/ui/component/table/table.html.twig' with {
            headline: 'ibexa_object_relation_list.multiple_relations'|trans|desc('Multiple relations'),
            head_cols: [
                { content: 'ibexa_object_relation_list.name'|trans|desc('Name') },
                { content: 'ibexa_object_relation_list.content_type'|trans|desc('Content type') },
                { content: 'ibexa_object_relation_list.created'|trans|desc('Created') },
            ],
            show_head_cols_if_empty: true,
        } %}
            {% block tbody %}
                {% for contentId in field.value.destinationContentIds %}
                    {% embed '@ibexadesign/ui/component/table/table_body_row.html.twig' %}
                        {% block body_row_cells %}
                            {{ render(controller('Ibexa\\Bundle\\AdminUi\\Controller\\ContentController::relationViewAction', {
                                    'contentId': contentId,
                            } )) }}
                        {% endblock %}
                    {% endembed %}
                {% endfor %}
            {% endblock %}
        {% endembed %}
    </div>
    {% endif %}
{% endblock %}


{% block ibexa_gmap_location_field %}
{% if field.value is not null %}
    {% set latitude = field.value.latitude %}
    {% set longitude = field.value.longitude %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_gmap_location')|trim}) %}
    <div {{ block( 'field_attributes' ) }}>
        <div class="ibexa-field-preview__map-wrapper">
            <div class="ibexa-gmaplocation__map"  data-longitude="{{ longitude }}" data-latitude="{{ latitude }}"></div>
        </div>
        <div class="ibexa-field-preview__meta-wrapper">
            <table class="ibexa-field-preview__meta">
                <thead>
                    <tr class="ibexa-field-preview__meta-title-row">
                        <th>{{ 'ibexa_gmap_location.location_properties'|trans|desc('Location properties') }}:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_gmap_location.address'|trans|desc('Address') }}:</td>
                        <td>{{ field.value.address }}</td>
                    </tr>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_gmap_location.latitude'|trans|desc('Latitude') }}:</td>
                        <td>{{ field.value.latitude }}</td>
                    </tr>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_gmap_location.longitude'|trans|desc('Longitude') }}:</td>
                        <td>{{ field.value.longitude }}</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
{% endif %}
{% endblock %}

{% block ibexa_image_field %}
{% if not ibexa_field_is_empty( content, field ) %}
{% set imageAlias = ibexa_image_alias( field, versionInfo, parameters.alias|default( 'original' ) ) %}
{% set src = imageAlias ? asset( imageAlias.uri ) : "//:0" %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_image')|trim}) %}
<div {{ block( 'field_attributes' ) }}>
    <div class="ibexa-field-preview__image-wrapper">
        <div class="ibexa-field-preview__image">
            <img src="{{ src }}">
        </div>
        <div class="ibexa-field-preview__meta-wrapper">
            <table>
                <thead>
                    <tr class="ibexa-field-preview__meta-title-row">
                        <th class="">{{ 'ibexa_image.image_file_properties'|trans|desc('Image file properties') }}:</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_image.file_name'|trans|desc('File name') }}:</td>
                        <td>{{ field.value.fileName }}</td>
                    </tr>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_image.size'|trans|desc('Size') }}:</td>
                        <td>{{ field.value.fileSize|ibexa_file_size( 1 ) }}</td>
                    </tr>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_image.alternative_text'|trans|desc('Alternative text') }}:</td>
                        <td>{{ field.value.alternativeText }}</td>
                    </tr>
                    <tr class="ibexa-field-preview__meta-value-row">
                        <td>{{ 'ibexa_image.master_dimensions'|trans|desc('Master dimensions') }}:</td>
                        <td>{{ 'ibexa_image.width_and_height'|trans({'%width%': field.value.width, '%height%': field.value.height})|desc('Width: %width%px height: %height%px') }}</td>
                    </tr>
                    {% if field.value.height %}
                        <tr class="ibexa-field-preview__meta-value-row">
                            <td>{{ 'ibexa_image.ratio'|trans|desc('Ratio') }}:</td>
                            <td>{{ (field.value.width/field.value.height)|round(2) }}</td>
                        </tr>
                    {% endif %}
                </tbody>
            </table>
        </div>
    </div>
    <div class="ibexa-field-preview__actions-wrapper">
        <a class="ibexa-field-preview__action ibexa-field-preview__action--preview" href="{{ field.value.uri }}" target="_blank">
            <svg class="ibexa-icon ibexa-icon--medium ibexa-icon--light">
                <use xlink:href="{{ ibexa_icon_path('open-newtab') }}"></use>
            </svg>
        </a>
    </div>
</div>
{% endif %}
{% endblock %}

{% block ibexa_image_asset_field %}
{% if not ibexa_field_is_empty( content, field ) and parameters.available %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_image_asset')|trim}) %}
    <div {{ block( 'field_attributes' ) }}>
        {{ render(controller('ibexa_content::viewAction', {
            contentId: field.value.destinationContentId,
            viewType: 'preview_ibexa_image_asset',
            no_layout: true,
            params: {
                parameters: parameters|default({})|merge({ alternativeText: field.value.alternativeText })
            }
        }))}}
    </div>
{% else %}
    <em>{{ 'ibexa_image_asset.not_available'|trans|desc('Image asset is not available (related content has been deleted or you have insufficient permissions)') }}</em>
{% endif %}
{% endblock %}

{% block ibexa_object_relation_field %}
{% if not ibexa_field_is_empty( content, field ) %}
    {% set attr = attr|merge({'class': (attr.class|default('') ~ ' ibexa-field-preview ibexa-field-preview--ibexa_object_relation_list')|trim}) %}
    <div {{ block( 'field_attributes' ) }}>
        {% embed '@ibexadesign/ui/component/table/table.html.twig' with {
            headline: 'ibexa_object_relation.single_relation'|trans|desc('Single relation'),
            head_cols: [
                { content: 'ibexa_object_relation.name'|trans|desc('Name') },
                { content: 'ibexa_object_relation.content_type'|trans|desc('Content type') },
                { content: 'ibexa_object_relation.version_created'|trans|desc('Version created') },
            ],
            show_head_cols_if_empty: true,
        } %}
            {% block tbody %}
                {% embed '@ibexadesign/ui/component/table/table_body_row.html.twig' with { field: field } %}
                    {% block body_row_cells %}
                        {{ render(controller('Ibexa\\Bundle\\AdminUi\\Controller\\ContentController::relationViewAction', {
                            'contentId': field.value.destinationContentId,
                        } )) }}
                    {% endblock %}
                {% endembed %}
            {% endblock %}
        {% endembed %}
    </div>
{% endif %}
{% endblock %}

{# pageService is exposed under parameters.pageService thanks to Page\ParameterProvider #}
{% block ezpage_field %}
{% if not ibexa_field_is_empty( content, field ) %}
    {% set layout = field.value.page.layout %}
    {% set template = parameters.pageService.getLayoutTemplate( layout ) %}
    {% include template with { 'zones': field.value.page.zones, 'zone_layout': layout, 'pageService': parameters.pageService } %}
{% endif %}
{% endblock %}

{# The simple_block_field block is a shorthand html block-based fields (like ibexa_text or ibexa_richtext) #}
{# You can define a field_value variable before rendering this one if you need special operation for rendering content (i.e. nl2br) #}
{% block simple_block_field %}
    {% if field_value is not defined %}
        {% set field_value = field.value %}
    {% endif %}
    <div {{ block( 'field_attributes' ) }}>
        {{ field_value|raw }}
    </div>
{% endblock %}

{% block simple_inline_field %}
    {% if field_value is not defined %}
        {% set field_value = field.value %}
    {% endif %}
    <span {{ block( 'field_attributes' ) }}>{{ field_value }}</span>
{% endblock %}

{# Block for field attributes rendering. Useful to add a custom class, id or whatever HTML attribute to the field markup #}
{% block field_attributes %}
    {% set attr = attr|default( {} ) %}
    {% for attrname, attrvalue in attr %}{{ attrname }}="{{ attrvalue }}" {% endfor %}
{% endblock %}
